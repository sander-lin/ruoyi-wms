<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.wms.mapper.BusinessOrderMapper">
    <resultMap id="OrderResMap" type="com.ruoyi.wms.domain.vo.businessorder.BusinessOrderVo">
        <id property="id" column="id" />

        <collection property="merchandises" ofType="com.ruoyi.wms.domain.vo.merchandise.MerchandiseVo"
                    select="selectMerchandiseList" column="id"/>
    </resultMap>

    <resultMap id="OrderDetailResMap" type="com.ruoyi.wms.domain.vo.businessorder.BusinessOrderDetailVo">
        <id property="id" column="id" />

        <collection property="merchandises" ofType="com.ruoyi.wms.domain.vo.merchandise.MerchandiseOrderDetailVo"
                    select="selectMerchandiseListByOrderId" column="id"/>
        <collection property="shipmentNotices" ofType="com.ruoyi.wms.domain.vo.businessorder.ShipmentNoticeOrderDetailVo"
                    select="selectShipmentNoticeByOrderId" column="id" />
    </resultMap>

    <resultMap id="ShipmentNoticeResMap" type="com.ruoyi.wms.domain.vo.businessorder.ShipmentNoticeOrderDetailVo">
        <id property="id" column="id" />

        <collection property="merchandises" ofType="com.ruoyi.wms.domain.vo.merchandise.MerchandiseNoticeVo"
                    select="selectMerchandiseListByShipmentNoticeId" column="id"/>
    </resultMap>

    <select id="selectMerchandiseList" resultType="com.ruoyi.wms.domain.vo.merchandise.MerchandiseOrderVo">
        select
            om.quantity_required,
            m.*,
            m.id as m_id,
            om.label_option,
            sqn.total_quantity_notice
        from order_merchandise om
        inner join merchandise m on m.id = om.merchandise_id
        left join (
            select
                SUM(snm.quantity_notice) total_quantity_notice,
                snm.merchandise_id
            FROM (
                SELECT
                    id
                FROM shipment_notice
                WHERE order_id = #{id} and is_delete = 0 and status != 1
            ) sn
            inner JOIN shipment_notice_merchandise snm on snm.shipment_notice_id = sn.id
            where snm.is_delete = 0
            GROUP BY snm.merchandise_id
        ) sqn on sqn.merchandise_id = m.id
        where om.order_id = #{id} and om.is_delete = 0
    </select>

    <select id="selectMerchandiseListByOrderId" resultType="com.ruoyi.wms.domain.vo.merchandise.MerchandiseOrderDetailVo">
        SELECT DISTINCT
            m.id,
            m.asin,
            m.color,
            m.fnsku,
            m.image,
            m.`name`,
            m.price,
            m.size,
            m.type,
            m.user_id,
            om.label_option,
            sqs.total_quantity_shipped,
            om.quantity_required,
            sqn.total_quantity_notice
        FROM (select
                id
            from business_order
            where id = #{id} and is_delete = 0
        ) bo
        inner join order_merchandise om on om.order_id = bo.id
        inner join merchandise m on m.id = om.merchandise_id
        left join (
            select distinct
                sm.merchandise_id,
                SUM(sm.quantity_shipped) total_quantity_shipped
            from (
                select
                    id
                from shipment_notice
                where order_id = #{id} and is_delete = 0 and status != 1
            ) sn
            inner join shipment_notice_merchandise snm ON snm.shipment_notice_id = sn.id
            inner join shipment s on s.shipment_notice_id = snm.shipment_notice_id
            inner join shipment_merchandise sm ON sm.shipment_id = s.id
            where s.is_delete = 0
            group by sm.merchandise_id
        ) sqs on sqs.merchandise_id = m.id
        left join (
            select
                SUM(snm.quantity_notice) total_quantity_notice,
                snm.merchandise_id
            FROM (
                SELECT
                    id
                FROM shipment_notice
                WHERE order_id = #{id} and is_delete = 0 and status != 1
            ) sn
            inner JOIN shipment_notice_merchandise snm on snm.shipment_notice_id = sn.id
            where snm.is_delete = 0
            GROUP BY snm.merchandise_id
        ) sqn on sqn.merchandise_id = m.id
    </select>

    <select id="selectMerchandiseListByShipmentNoticeId" resultType="com.ruoyi.wms.domain.vo.merchandise.MerchandiseNoticeVo">
        select distinct
            m.id,
            m.asin,
            m.color,
            m.fnsku,
            m.image,
            m.`name`,
            m.price,
            m.size,
            m.type,
            m.user_id,
            om.label_option,
            om.quantity_required,
            snm.quantity_notice
        from (
            select id,order_id
            from shipment_notice
            where id = #{id} and is_delete = 0
        ) sn
        inner join shipment_notice_merchandise snm on snm.shipment_notice_id = sn.id
        inner join order_merchandise om on om.order_id = sn.order_id AND om.merchandise_id = snm.merchandise_id
        inner join merchandise m on m.id = snm.merchandise_id
    </select>

    <select id="selectOrderList" resultMap="OrderResMap">
        select *
        from business_order
        ${ew.getCustomSqlSegment}
    </select>

    <select id="queryOrderList" resultMap="OrderResMap">
        select distinct o.*
        from business_order o
        inner join order_merchandise om on om.order_id = o.id
        inner join merchandise m on m.id = om.merchandise_id
        ${ew.getCustomSqlSegment}
    </select>

    <select id="selectVoBatchIds" resultMap="OrderResMap">
        select distinct o.*
        from business_order o
        inner join order_merchandise om on om.order_id = o.id
        inner join merchandise m on m.id = om.merchandise_id
        <where>
            <if test="ids != null and !ids.isEmpty()">
                o.id IN
                <foreach
                    item="id"
                    collection="ids"
                    open="("
                    separator=","
                    close=")"
                >
                    #{id}
                </foreach>
            </if>
            <if test="ids == null or ids.isEmpty()">
                1=0
            </if>
        </where>
    </select>


    <select id="selectOrderDetailById" resultMap="OrderDetailResMap" parameterType="Long">
        select
            *
        from business_order
        where id = #{id} and is_delete = 0
    </select>

    <select id="selectShipmentNoticeByOrderId" resultMap="ShipmentNoticeResMap">
        select
            *
        from shipment_notice
        <where>
            order_id = #{id} and is_delete = 0 and status != 1
        </where>
    </select>

</mapper>
